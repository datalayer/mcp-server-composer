# Copyright (c) 2023-2024 Datalayer, Inc.
#
# BSD 3-Clause License

[build-system]
requires = ["hatchling~=1.21"]
build-backend = "hatchling.build"

[project]
name = "mcp_server_composer"
authors = [{ name = "Datalayer", email = "info@datalayer.io" }]
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["MCP", "Model Context Protocol", "Server", "Composition"]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp[cli]>=1.2.1",
    "toml>=0.10.2",
    "importlib-metadata>=4.8.0",
    "typing-extensions>=4.0.0",
    # Phase 1 dependencies
    "tomli>=2.0.0; python_version < '3.11'",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "psutil>=5.9.0",
    # Phase 1 Week 4 - Transport Layer
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sse-starlette>=1.8.0",
    "httpx>=0.25.0",
    # Phase 2 - Authentication
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0"]
lint = ["ruff>=0.1.0", "mypy>=1.0.0"]
dev = ["pre-commit>=3.0.0"]

[project.license]
file = "LICENSE"

[project.urls]
Home = "https://github.com/datalayer/mcp-server-composer"
Documentation = "https://github.com/datalayer/mcp-server-composer"
Repository = "https://github.com/datalayer/mcp-server-composer"
Issues = "https://github.com/datalayer/mcp-server-composer/issues"

[project.scripts]
mcp-compose = "mcp_server_composer.cli:main"

[tool.hatch.version]
path = "mcp_server_composer/__version__.py"

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=mcp_server_composer",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
